"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[3237],{4281:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>o,contentTitle:()=>l,default:()=>c,frontMatter:()=>p,metadata:()=>i,toc:()=>s});var n=t(7462),r=(t(7294),t(3905));t(8209);const p={sidebar_position:3,title:"Poetry"},l=void 0,i={unversionedId:"dev-env/package-management/poetry",id:"dev-env/package-management/poetry",title:"Poetry",description:"Overview",source:"@site/content/course-notes/4.dev-env/1.package-management/3.poetry.mdx",sourceDirName:"4.dev-env/1.package-management",slug:"/dev-env/package-management/poetry",permalink:"/course-notes/dev-env/package-management/poetry",draft:!1,editUrl:"https://github.com/IT4063C/IT4063C.github.io/tree/main/content/course-notes/4.dev-env/1.package-management/3.poetry.mdx",tags:[],version:"current",lastUpdatedBy:"Yahya Gilany",lastUpdatedAt:1662138648,formattedLastUpdatedAt:"Sep 2, 2022",sidebarPosition:3,frontMatter:{sidebar_position:3,title:"Poetry"},sidebar:"notes",previous:{title:"Pipenv",permalink:"/course-notes/dev-env/package-management/pipenv"},next:{title:"Pyflow",permalink:"/course-notes/dev-env/package-management/pyflow"}},o={},s=[{value:"Overview",id:"overview",level:2},{value:"Cheatsheet",id:"cheatsheet",level:2}],m={toc:s};function c(e){let{components:a,...t}=e;return(0,r.kt)("wrapper",(0,n.Z)({},m,t,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"overview"},"Overview"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Poetry is a tool for dependency management and packaging in Python. It allows you to declare the libraries your project depends on and it will manage (install/update) them for you. ",(0,r.kt)("sup",{parentName:"p",id:"fnref-1"},(0,r.kt)("a",{parentName:"sup",href:"#fn-1",className:"footnote-ref"},"1")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Poetry is very similar to PipEnv."),(0,r.kt)("li",{parentName:"ul"},"It, also, doesn't come with Python by default, so you'll need to install it first."),(0,r.kt)("li",{parentName:"ul"},"Two major benfits over pip are (same as pipenv):",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Dependencies are installed in a virtualenv, so you don't have to worry about installing them in the system path."),(0,r.kt)("li",{parentName:"ul"},"It automatically captures installed dependencies in files to generate an exact replica of the environment packages.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"I'd then check the dependeinces file into my code repository and is always available for me to use and share."),(0,r.kt)("li",{parentName:"ul"},"Unlike in pip where you specifically need to freeze a snapshot of the entire virtual env with all of its dependencies."),(0,r.kt)("li",{parentName:"ul"},"It generates 2 files: ",(0,r.kt)("inlineCode",{parentName:"li"},"poetry.lock")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"pyproject.toml"),".")))))),(0,r.kt)("h2",{id:"cheatsheet"},"Cheatsheet"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"To start using Poetry, you'll need to initialize a project."),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"poetry init")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"poetry install")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"To install a package"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"poetry add <package>\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"To install a specific version of a package"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"poetry add <package>@<version>\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"To upgrade a package"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"poetry update <package>\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"To uninstall a package"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"poetry remove <package>\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"To Search for packages"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"poetry search <package>\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"https://python-poetry.org/docs/cli/"},"All Other commands can be found here")))),(0,r.kt)("hr",null),(0,r.kt)("p",null,(0,r.kt)("sup",{parentName:"p",id:"fnref-1"},(0,r.kt)("a",{parentName:"sup",href:"#fn-1",className:"footnote-ref"},"1"))," ",(0,r.kt)("a",{parentName:"p",href:"https://python-poetry.org/docs/"},"Poetry Documentation")))}c.isMDXComponent=!0}}]);