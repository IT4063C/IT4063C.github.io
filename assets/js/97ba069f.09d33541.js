"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[482],{3905:function(e,t,a){a.d(t,{Zo:function(){return p},kt:function(){return m}});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=n.createContext({}),c=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},p=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(a),m=r,f=u["".concat(l,".").concat(m)]||u[m]||d[m]||i;return a?n.createElement(f,o(o({ref:t},p),{},{components:a})):n.createElement(f,o({ref:t},p))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var c=2;c<i;c++)o[c]=a[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},41356:function(e,t,a){a.r(t),a.d(t,{assets:function(){return p},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return d}});var n=a(87462),r=a(63366),i=(a(67294),a(3905)),o=["components"],s={title:"Data analytics ideas",sidebar_position:1},l=void 0,c={unversionedId:"labs/data-analytics-ideas/index",id:"labs/data-analytics-ideas/index",title:"Data analytics ideas",description:"Interesting Data Sets",source:"@site/docs/labs/2.data-analytics-ideas/index.mdx",sourceDirName:"labs/2.data-analytics-ideas",slug:"/labs/data-analytics-ideas/",permalink:"/docs/labs/data-analytics-ideas/",editUrl:"https://github.com/IT4063C/IT4063C.github.io/tree/main/docs/labs/2.data-analytics-ideas/index.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Data analytics ideas",sidebar_position:1},sidebar:"labs",previous:{title:"Git - Hello World",permalink:"/docs/labs/hello-world/"}},p={},d=[{value:"Interesting Data Sets",id:"interesting-data-sets",level:2},{value:"Python Code Snippets",id:"python-code-snippets",level:3}],u={toc:d};function m(e){var t=e.components,a=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"interesting-data-sets"},"Interesting Data Sets"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://data.cincinnati-oh.gov/safety/PDI-Police-Data-Initiative-Crime-Incidents/k59e-2pvf"},"Cincinnati Crime Incidents"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://insights.cincinnati-oh.gov/stories/s/8eaa-xrvz"},"Example Dashboard")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://dev.socrata.com/foundry/data.cincinnati-oh.gov/k59e-2pvf"},"API")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://infoguides.gmu.edu/find-data/practice"},"GMU Data")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/awesomedata/awesome-public-datasets"},"Awesome Public Datasets")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.lib.ncsu.edu/teaching-and-learning-datasets"},"NCSU Datasets for Teaching and Learning")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://data.gov/"},"Data.gov")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.sheffield.ac.uk/mash/statistics/datasets"},"University of Sheffield - Datasets for Teaching")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://dam.ukdataservice.ac.uk/media/604870/teaching-idea-examining-confidence-in-the-police-using-the-crime-survey-for-england-and-wales.pdf"},"https://dam.ukdataservice.ac.uk/media/604870/teaching-idea-examining-confidence-in-the-police-using-the-crime-survey-for-england-and-wales.pdf")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://dasl.datadescription.com/"},"DASL")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://data.ohio.gov/wps/portal/gov/data/view"},"Data.Ohio")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://data.cincinnati-oh.gov/browse?category=Thriving+Neighborhoods"},"Cincinnati Data.Ohio"))),(0,i.kt)("h3",{id:"python-code-snippets"},"Python Code Snippets"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'#!/usr/bin/env python\n\n# make sure to install these packages before running:\n# pip install pandas\n# pip install sodapy\n\nimport pandas as pd\nfrom sodapy import Socrata\n\n# Unauthenticated client only works with public data sets. Note \'None\'\n# in place of application token, and no username or password:\nclient = Socrata("data.cincinnati-oh.gov", None)\n\n# Example authenticated client (needed for non-public datasets):\n# client = Socrata(data.cincinnati-oh.gov,\n#                  MyAppToken,\n#                  userame="user@example.com",\n#                  password="AFakePassword")\n\n# First 2000 results, returned as JSON from API / converted to Python list of\n# dictionaries by sodapy.\nresults = client.get("k59e-2pvf", limit=2000)\n\n# Convert to pandas DataFrame\nresults_df = pd.DataFrame.from_records(results)\n')))}m.isMDXComponent=!0}}]);